<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="club.wadreamer.chandao.mapper.TaskDao">

    <resultMap id="workSummary" type="club.wadreamer.chandao.entity.dto.WorkSummaryDto">
        <result column="realname" property="finishedBy"/>
        <result column="project_id" property="projectId"/>
        <result column="project" property="project"/>
        <result column="task_id" property="taskId"/>
        <result column="task" property="task"/>
        <result column="status" property="status"/>
        <result column="estStarted" property="estStarted"/>
        <result column="deadline" property="deadline"/>
        <result column="realStarted" property="realStarted"/>
        <result column="finishedDate" property="finishedDate"/>
        <result column="delay" property="delay"/>
        <result column="consumed" property="consumed"/>
        <result column="estimate" property="estimate"/>
    </resultMap>

    <select id="getWorkSummary" resultMap="workSummary">
        select t1.realname realname,t2.id project_id, t2.`name` project, t3.id task_id,
        t3.`name` task,t3.`status` status,t3.estStarted estStarted,t3.deadline deadline,t3.realStarted realStarted,
        t3.finishedDate finishedDate, t3.consumed consumed,t3.estimate estimate,
        if(TIMESTAMPDIFF(DAY,t3.deadline,t3.finishedDate) is NULL,0,TIMESTAMPDIFF(DAY,t3.deadline,t3.finishedDate))
        delay
        from zt_user t1, zt_project t2, zt_task t3
        WHERE t1.account = t3.finishedBy
        and t2.id = t3.project
        and t3.deleted = '0'
        and t3.`status` not in ('wait','doing','pause','cancel')
        <if test="finishedBy != ''">
            and t3.finishedBy = #{finishedBy}
        </if>
        and t3.finishedDate between #{startDate} and DATE_ADD(#{endDate},INTERVAL 1 DAY)
        ORDER BY t1.id,t2.id,t3.id
    </select>

    <resultMap id="workSum" type="club.wadreamer.chandao.entity.dto.WorkSumDto">
        <result column="sortnum" property="sortNum"/>
        <result column="realname" property="finishedBy"/>
        <result column="task_consumed" property="taskConsumedSum"/>
        <result column="task_estimate" property="taskEstimateSum"/>
        <result column="taskType" property="taskType"/>
    </resultMap>

    <select id="getWorkSumSort" resultMap="workSum">
        select ROW_NUMBER() over (order by sum(binary t3.consumed) DESC) sortnum,
        t1.realname realname, sum(binary t3.consumed) task_consumed, sum(binary t3.estimate) task_estimate,
        t4.`value` taskType
        from zt_task t3,
        (select `key`,`value`,`module`,`section` from zt_lang where section = "typeList" and module = "task" group by `key`) t4,
        zt_user t1
        WHERE t3.type = t4.`key`
        and t1.account = t3.finishedBy
        and t3.finishedDate between #{startDate} and DATE_ADD(#{endDate},INTERVAL 1 DAY)
        and t3.`status` not in ('wait','doing','pause','cancel')
        and t4.module = 'task'
        and t4.section = 'typeList'
        group by t1.realname, t4.`value`
        ORDER BY t1.realname
    </select>

    <!--<select id="getWorkSumSort" resultMap="workSum">-->
        <!--select ROW_NUMBER() over (order by sum(binary t3.consumed) DESC) sortnum,-->
        <!--t1.realname realname, sum(binary t3.consumed) sumconsumed, sum(binary t3.estimate) sumestimate-->
        <!--from zt_user t1, zt_project t2, zt_task t3-->
        <!--WHERE t1.account = t3.finishedBy-->
        <!--and t2.id = t3.project-->
        <!--and t3.deleted = '0'-->
        <!--and t3.`status` not in ('wait','doing','pause','cancel')-->
        <!--and t3.finishedDate between #{startDate} and DATE_ADD(#{endDate},INTERVAL 1 DAY)-->
        <!--GROUP BY t1.realname-->
        <!--ORDER BY sumconsumed desc-->
    <!--</select>-->

    <resultMap id="workload" type="club.wadreamer.chandao.entity.dto.WorkloadDto">
        <result column="realname" property="finishedBy"/>
        <result column="project_id" property="projectId"/>
        <result column="project" property="project"/>
        <result column="task_id" property="taskId"/>
        <result column="task" property="task"/>
        <result column="status" property="status"/>
        <result column="estStarted" property="estStarted"/>
        <result column="deadline" property="deadline"/>
        <result column="realStarted" property="realStarted"/>
        <result column="consumed" property="consumed"/>
        <result column="left" property="left"/>
        <result column="storyId" property="storyId"/>
        <result column="delay" property="delay"/>
        <result column="estimate" property="estimate"/>
    </resultMap>

    <select id="getWorkload" resultMap="workload">
        select t1.realname realname,t2.id project_id, t2.`name` project, t3.id task_id,
        t3.`name` task,t3.`status` status,t3.estStarted estStarted,t3.deadline deadline,t3.realStarted realStarted,
        t3.finishedDate finishedDate, t3.consumed consumed,t3.assignedDate, t3.story storyId, t3.`left` `left`,
        if(TIMESTAMPDIFF(DAY,t3.estStarted,t3.realStarted) is NULL,0,TIMESTAMPDIFF(DAY,t3.estStarted,t3.realStarted))
        delay, t3.estimate estimate
        from zt_user t1, zt_project t2, zt_task t3
        WHERE t1.account = t3.assignedTo
        and t2.id = t3.project
        and t3.deleted = '0'
        <if test="assignedTo != ''">
            and t3.assignedTo = #{assignedTo}
        </if>
        <if test="project != ''">
            and t3.project = #{project}
        </if>
        <if test="status != ''">
            and t3.`status` = #{status}
        </if>
        <if test="status == ''">
            and t3.`status` in ('wait','doing')
        </if>
        <if test="dateType == 'openedDate'">
            and t3.openedDate between #{startDate} and DATE_ADD(#{endDate},INTERVAL 1 DAY)
        </if>
        <if test="dateType == 'estStarted'">
            and t3.estStarted between #{startDate} and DATE_ADD(#{endDate},INTERVAL 1 DAY)
        </if>
        <if test="dateType == 'deadline'">
            and t3.deadline between #{startDate} and DATE_ADD(#{endDate},INTERVAL 1 DAY)
        </if>
        ORDER BY t1.id,t3.estStarted
    </select>


</mapper>